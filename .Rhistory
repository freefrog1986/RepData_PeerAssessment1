getwd()
setwd("/Users/freefrog/Studing/DataScience/gitrepo/RepData_PeerAssessment1")
unzip('activity.zip')
ori_data<- read.table(file = 'activity.csv')
head(ori_Data)
unzip('activity.zip')
read.table(file = 'activity.csv')
ori_data<- read.csv(file = 'activity.csv')
head(ori_Data)
head(ori_data)
transform?
?transform
head(ori_data)
str(ori_data)
with(ori_data,tapply(steps,date,sum))
step_per_day<-with(ori_data,tapply(steps,date,sum))
?tapply
with(ori_data,tapply(steps,date,sum,na.rm=TRUE))
ori_data$steps[date==1]
ori_data$steps[date==1,]
ori_data$steps[,date==1]
ori_data[ori_data$date==1]
ori_data[ori_data$date==1,]
ori_data[1,1]
ori_data[1,]
ori_data[1:20,]
ori_data[ori_data$date==2012-10-01,1:2]
ori_data$date=="2012-10-01"
index<-ori_data$date=="2012-10-01"
ori_data[index,1:2]
with(ori_data,tapply(steps,date,sum,na.rm=TRUE))
step_per_day<-with(ori_data,tapply(steps,date,sum,na.rm=TRUE))
mean(step_per_day)
?knitr
hist(step_per_day)
?hist
hist(step_per_day, density = 100)
hist(step_per_day, density = 10)
?hist
class(step_per_day)
hist(step_per_day, breaks=100,density = 10)
hist(step_per_day, breaks=10,density = 10)
hist(step_per_day, breaks=20,density = 10)
hist(step_per_day, breaks=30,density = 10)
hist(step_per_day, breaks=40,density = 10)
hist(step_per_day, breaks=20,density = 10)
hist(step_per_day, "month")
hist(ori_data, "date")
hist(ori_data$date, "date")
class(ori_data$date)
class(ori_data$steps)
hist(ori_data$steps)
hist(ori_data$steps,'date')
hist(ori_data$steps,'fd')
hist(ori_data$steps,'month')
summary(step_per_day)
median(step_per_day)
head(ori_data)
inter_mean_step<-with(ori_data,tapply(steps,interval,mean,na.rm=TRUE))
head(inter_mean_step)
unique(ori_data$interval)
inter_mean_step
plot(unique(ori_data$interval),inter_mean_step)
plot(xaxis,
inter_mean_step,
type = 'l',
xlab = 'time serise of one day',
ylab= 'average number of steps',
main = 'Average daily active pattren')
xaxis<-unique(ori_data$interval)
plot(xaxis,
inter_mean_step,
type = 'l',
xlab = 'time serise of one day',
ylab= 'average number of steps',
main = 'Average daily active pattren')
max(inter_mean_step)
inter_mean_step[max(inter_mean_step)]
inter_mean_step[max(inter_mean_step),1]
inter_mean_step[1.max(inter_mean_step)]
inter_mean_step[1,max(inter_mean_step)]
class(inter_mean_step[max(inter_mean_step)])
inter_mean_step[1]
inter_mean_step[2]
?which''
?which
which(inter_mean_step, max(inter_mean_step))
which(inter_mean_step, inter_mean_step==max(inter_mean_step))
which(inter_mean_step==max(inter_mean_step))
inter_mean_step==max(inter_mean_step)
which(inter_mean_step==max(inter_mean_step))
x<-which(inter_mean_step==max(inter_mean_step))
x
df<-data.frame(time = unique(ori_data$interval, step = inter_mean_step)
df<-data.frame(time = unique(ori_data$interval), step = inter_mean_step)
head(df)
which(max(df[,2]==df)
)
which(max(df[,2])==df)
which(max(df[,2])==df[,2])
df$time[max(df[,2])]
df$step[max(df[,2])]
max(df[,2])
df[,2]==max(df[,2])
subst(df,step==max(df[,2]))
subset(df,step==max(df[,2]))
subset(df,step==max(df[,2]))$time
x<-ori_data[,1]==NA
x
x<-ori_data[,1]=='NA'
x<-ori_data=='NA'
head(x)
length(ori_data[,1])
is.na(ori_data$steps)
is.na(ori_data[,1])
sum(is.na(ori_data[,1]))
total_na<-sum(is.na(ori_data[,1]))
index_na<-is.na(ori_data[,1])
ori_data$steps[index_na]
ori_data$interval[index_na]
ori_data[,3][index_na]
?sapp,y
?sapply
ori_data[,1][index_na]<-0
ori_data[,1][index_na]
ori_data<- read.csv(file = 'activity.csv')
for(i in index_inter){
print(i)
}
index_inter<-ori_data[,3][index_na]
for(i in index_inter){
print(i)
}
df[,1]
df[,1]==2105
df[,1]=='2105'
df[,1]==0
df[,1]==5
df[,1]==10
which(df[,1]==10)
df[,2]
df[[which(df[,1]==10)]]
df[which(df[,1]==10)]
df[3]
df[1,3]
df[3,1]
df[3,2]
xx<-data.frame(ori_data)
index_na<-is.na(ori_data[,1])
index_inter<-ori_data[,3][index_na]
data1<-data.frame(ori_data)
for(i in index_inter){
data1[,3][i]<-df[which(df[,1]==i),2]
}
data1
index_na<-is.na(ori_data[,1])
index_inter<-ori_data[,3][index_na]
data1<-data.frame(ori_data)
for(i in index_inter){
data1[,1][i]<-df[which(df[,1]==i),2]
}
data1
View(ori_data)
data1[,1][index_na]<-0
data1[,1]
for(i in index_na){
data1[,1][i]<-1
}
data1[,1]
lapply(data1[,1][index_na], function(x) print(x))
data1<-data.frame(ori_data)
lapply(data1[,1][index_na], function(x) print(x))
lapply(data1[,c(1,3)][index_na], function(x) print(x))
lapply(data1[,1:3][index_na], function(x) print(x))
data1[index_na]
data1[index_na,1:3]
lapply(data1[index_na,1:3], function(x) print(x))
lapply(data1[index_na,1:3], function(x) x[,3])
lapply(data1[index_na,1:3], function(x) x[,1])
lapply(data1[index_na,1:3], function(x) x[1])
lapply(data1[index_na,1:3], function(x) x$interval)
lapply(data1[index_na,1:3], function(x) x[1])
lapply(data1[index_na,1:3], function(x) x[1][1])
lapply(data1[index_na,1:3], function(x) x[[1][1])
lapply(data1[index_na,1:3], function(x) x[[1]][1])
lapply(data1[index_na,1:3], function(x) x[1]$interval)
lapply(data1[index_na,1:3], function(x) x)
data1[1]
data1[1,1]
data1[2,1]
length(data[,1])
for(i in index_na){
data1[,1][i]<-1
}
data1
data1[,1][300:450]
data1[,1][3000:4500]
unique(data1[,1])
length(data1
)
nrow(data1)
data1[1,3]
df$time
df$time==0
which(df$time==0)
df[which(df$time==0),2]
data1<-data.frame(ori_data)
for(i=1:nrow(data1)){
if(is.na(data1[i,1])){
var1<-df$time==data1[i,3]
data1[i,1]<-df[which(var1),2]
}
}
for(i in 1:nrow(data1)){
if(is.na(data1[i,1])){
var1<-df$time==data1[i,3]
data1[i,1]<-df[which(var1),2]
}
}
data1
data2<-ori_data[,1]
length(data2)
data2[2]
data2<-ori_data[,1]
for(i in 1:length(data2)){
if(is.na(data2[i])){
var1<-df$time==ori_data[i,3]
data2[i]<-df[which(var1),2]
}
}
data2
data1[,1]
sum_step_data<-with(data1,tapply(steps,date,sum,na.rm=TRUE))
par(mar=c(4,4,4,4))
hist(sum_step_data,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day')
data1
sum_step_data<-with(data1,tapply(steps,date,sum))
par(mar=c(4,4,4,4))
hist(sum_step_data,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day')
data1
data1<-data.frame(ori_data)
for(i in 1:nrow(data1)){
if(is.na(data1[i,1])){
var1<-df$time==data1[i,3]
#### Fill in all of the missing values in the dataset.
data1[i,1]<-df[which(var1),2]
}
}
sum_step_data<-with(data1,tapply(steps,date,sum))
par(mar=c(4,4,4,4))
hist(sum_step_data,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day')
med_step1<-median(sum_step_data)
sum_step_data
med_step1<-median(sum_step_data)
med_step1
mean_step1<-mean(sum_step_data)
mean_step1
class(men_step1)
class(mean_step1)
as.integer(mean_step1)
as.numeric(mean_step1)
str(df)
str(ori_data)
install.packages("Lattice")
install.packages("lattice")
?weekdays
ori_data[,2]
str(ori_data)
weekdays(ori_data[,2])
as.Date(ori_data[,2])
weekdays(as.Date(ori_data[,2]))
?factor
theday<-weekdays(as.Date(ori_data[,2]))
factor(theday)
weekdays.Date(ori_data[,2])
weekdays.Date(as.Date(ori_data[,2]))
theday[1]
for(i in 1:length(theday)){
if(theday[i]==("Sunday"|"Saturday")){
theday[i]<-'weekend'
}
else{
theday[i]<-'weekday'
}
}
for(i in 1:length(theday)){
if(theday[i]=="Sunday"|theday[i]=="Saturday")){
theday[i]<-'weekend'
}
else{
theday[i]<-'weekday'
}
}
for(i in 1:length(theday)){
if(theday[i]=="Sunday"|theday[i]=="Saturday"){
theday[i]<-'weekend'
}
else{
theday[i]<-'weekday'
}
}
theday
data2<-data.frame(ori_data)
data2$theday<-factor(theday)
head(data2
)
str(data2)
library('lattice')
with(data2,tapply(steps,interval+theday,mean,na.rm=TRUE))
?tapply
with(data2,aggregate(steps,interval+theday,mean,na.rm=TRUE))
with(data2,aggregate(steps~interval+theday,mean,na.rm=TRUE))
aggregate(x=data2, by = steps~interval+theday,FUN = mean,na.rm=TRUE)
aggregate(x=data2, formula = steps~interval+theday,FUN = mean,na.rm=TRUE)
aggregate(x=data2, by = c('interval','theday'), formula = steps~interval+theday,FUN = mean,na.rm=TRUE)
aggregate(x=data2, by = interval, formula = steps~interval+theday,FUN = mean,na.rm=TRUE)
aggregate(x=data2, by = data2$interval, formula = steps~interval+theday,FUN = mean,na.rm=TRUE)
aggregate(data2, list(theday=data2.theday), mean,na.rm=TRUE)
aggregate(data2, list(theday=data2$theday), mean,na.rm=TRUE)
aggregate(data2, list(theday=data2$interval), mean,na.rm=TRUE)
aggregate(data2, list(iter=data2$interval,theday=data2$theday), mean,na.rm=TRUE)
aggdata<-aggregate(data2,
list(iter=data2$interval,theday=data2$theday),
mean,
na.rm=TRUE)
aggdata<-aggregate(data2,
step~theday+interval,
mean,
na.rm=TRUE)
aggdata<-aggregate(
step~theday+interval,
data2,
mean,
na.rm=TRUE)
names(data2
)
aggdata<-aggregate(
steps~theday+interval,
data2,
mean,
na.rm=TRUE)
aggdata
head(aggdata)
with(aggdata,xyplot(steps~interval|theday))
with(aggdata,xyplot(steps~interval|theday,type = 'l'))
par(mfrow=c(1,2))
with(aggdata,xyplot(steps~interval|theday,type = 'l'))
par(mfrow=c(1,2))
with(aggdata,xyplot(steps~interval|theday,type = 'l'))
par(mfrow=c(2,2))
with(aggdata,xyplot(steps~interval|theday,type = 'l'))
dev.off()
par(mfrow=c(2,2))
with(aggdata,xyplot(steps~interval|theday,type = 'l'))
with(aggdata,xyplot(steps~interval|theday,type = 'l', layout = c(1,2)))
?xyplot
with(aggdata,xyplot(steps~interval|theday,type = 'l', layout = c(1,2)),main="ss")
with(aggdata,xyplot(steps~interval|theday,type = 'l', layout = c(1,2)),title="ss")
step_per_day<-with(ori_data,tapply(steps,date,sum,na.rm=TRUE))
par(mar=c(4,4,4,4))
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day')
par(mfrow=c(1,1))
dev.off()
step_per_day<-with(ori_data,tapply(steps,date,sum,na.rm=TRUE))
par(mar=c(4,4,4,4))
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day')
plot(xaxis,
inter_mean_step,
type = 'l',
xlab = 'time serise of one day',
ylab= 'average number of steps',
main = 'Average daily active pattren')
hist(sum_step_data,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day')
with(aggdata,xyplot(steps~interval|theday,type = 'l', layout = c(1,2)))
min(step_per_day)
max(step_per_day)
?read.csv
head(ori_data)
tbl_df(ori_data)
library(dplyr)
tbl_df(ori_data)
arrange(df, desc(step))[1, ]
head(df)
df[max(df$step),]
df[which.max(df$step),]
glimpse(ori_data
)
str(ori_data)
df
head(df)
max(df$step)
df[df==max(df$step),1]
df[df$step==max(df$step),1]
max_step_time<-subset(df,step==max(df[,2]))$time
AverageStepsPerInterval <- ori_data%>%
group_by(interval)%>%
filter(!is.na(steps))%>%
summarise(AverageSteps = mean(steps, na.rm=TRUE))
head(AverageStepsPerInterval)
activity_NA <- activity[is.na(ori_data),]
activity_NA <- ori_data[is.na(ori_data),]
head(activity_NA)
activity_NA$steps <- as.numeric(AverageStepsPerInterval$AverageSteps)
activity_NA$steps
ori_data[is.na(ori_data$steps),1] <- as.numeric(AverageStepsPerInterval$AverageSteps)
identical(data1,ori_data)
>hist
?hist
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day')
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',)
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',)
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',)
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',las =1)
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',las =2)
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',las =3)
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',las =4)
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',las =1)
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',las =0)
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',las =2)
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',las =1.5)
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',las =1.1)
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',las =1.8)
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',las =1.9)
hist(step_per_day,
breaks=20,
density = 10,
xlab = 'Steps',
main = 'Total number of steps taken each day',las =3.9)
